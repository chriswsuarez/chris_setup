alias safc='source ~/afc_ws/devel/setup.bash'

alias augre_docker='cd ~/afc_ws/src/afc_demos/docker/augre/ && docker compose up -d && docker exec -ti augre bash'
alias object_detection_docker='cd ~/afc_ws/src/afc_demos/docker/object_detection/ && docker compose up -d && docker exec -ti object_detection bash'

alias augre='roslaunch afc_demos full_demo.launch robot:=$ROBOT use_database:=true'
alias augreo='roslaunch afc_demos full_demo.launch robot:=$ROBOT use_database:=true enable_detection:=true'
alias augrec='roslaunch afc_demos full_demo.launch robot:=$ROBOT use_database:=true enable_detection:=true enable_cot:=true'
alias augred='roslaunch afc_demos full_demo.launch robot:=$ROBOT use_database:=true enable_detection:=true enable_darknet:=true'
alias augrer='roslaunch afc_demos full_demo.launch robot:=$ROBOT use_database:=true enable_detection:=true enable_retinanet:=true'
alias objdet='roslaunch object_detection object_detection.launch robot:=$ROBOT'
alias objdetd='roslaunch object_detection object_detection.launch robot:=$ROBOT enable_darknet:=true'
alias objdetr='roslaunch object_detection object_detection.launch robot:=$ROBOT enable_retinanet:=true'

alias resetna='rosservice call /$ROBOT/robot_asa_node/reset_nearest_anchor "{}"'
alias oakd_converion='roslaunch oakd_camera darknet_conversion.launch robot:=$ROBOT'

# Phoenix
alias phoenix='phxlaunch phoenix_launch $ROBOT.xlaunch'
alias phxteleoponly='source ~/phoenix/phoenix-r1/install/setup.bash && roslaunch ~/phoenix/phoenix-r1/$ROBOT_teleop.launch'
alias save_phx_map='rosrun map_server map_saver map:=/$ROBOT/point_cloud_cache/renderers/full_map'

# AugRE Servers
alias robofleet_server='cd ~/robofleet/robofleet_server && yarn start'
alias augre_db_server='cd ~/postgrest && postgrest augre_api.conf'
alias augre_img_server='cd ~/augre_images && python3 -m http.server 4002'
